[
    {
        "id": "6426f0a3cdc49c959a44f5e0",
        "ques": "1. what is the difference between props and state?",
        "answer": [
            "`props `are used to pass data down from the parent component to the child component, and the `state ` is used to manage the component's internal data"
        ],
        "name": "Blanca Cardenas"
    },
    {
        "id": "6426f0a3860b6ad8047e1e9d",
        "ques": "2. How does useState work?",
        "answer": [
            "`useState ` is a hook in React that allows functional components to manage state. It takes an initial value as an argument and returns an array with the current state value and a function to update that value, triggering a re-render of the component when the state is updated."
        ],
        "name": "Burns Dotson"
    },
    {
        "id": "6426f0a3061cd146486864cb",
        "ques": "3. What can useState do other than load data? ",
        "answer": [
            "Manage component state",
            "Render dynamic content",
            "Implement controlled components",
            "Handle user interactions",
            "Store and manage application data"
        ],
        "name": "Johnson Hanson"
    },
    {
        "id": "6426f0a3061cd146486864cb",
        "ques": "4. how does react work.",
        "answer": [
            "'Virtual DOM' React uses a virtual DOM (Document Object Model) to optimize the update process. The virtual DOM is a lightweight representation of the physical DOM that React uses to keep track of changes in the UI. When an element's state changes, React updates the virtual DOM and then compares it to the previous version of the virtual DOM. It then calculates the minimum set of changes needed to update the actual DOM and applies those changes efficiently",
            "'JSX': React uses a syntax extension called JSX (JavaScript XML) that allows you to write HTML-like code within your JavaScript. JSX makes it easy to write declarative and expressive UI code and allows you to use the full power of JavaScript within your components.",
            "'hooks' React provides a way to manage state between your components using useState hooks. The state is data that is maintained within a component and can change over time. When a component's state changes, React will re-render the component with the updated state..",
            "'Props': React allows you to pass data and functionality to child components via props (short for properties). Props are read-only and cannot be modified by child components. Props provide a way to create reusable and composable elements."
        ],
        "name": "Johnson Hanson"
    }
]